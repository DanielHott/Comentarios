{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Comentários\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"list-group\"\n};\nconst _hoisted_5 = {\n  class: \"list-group-item\"\n};\nconst _hoisted_6 = {\n  class: \"comment__author\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FormTodo = _resolveComponent(\"FormTodo\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createVNode(_component_FormTodo, {\n    onAddTodo: $options.addComment\n  }, null, 8 /* PROPS */, [\"onAddTodo\"]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.allComments, (comment, index) => {\n    return _openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"span\", _hoisted_6, [_createTextVNode(\"Autor: \"), _createElementVNode(\"strong\", null, _toDisplayString(comment.name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, _toDisplayString(comment.message), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"a\", {\n      href: \"#\",\n      title: \"Excluir\",\n      onClick: _withModifiers($event => $options.removeComment(index), [\"prevent\"])\n    }, null, 8 /* PROPS */, _hoisted_7)])]);\n  }), 256 /* UNKEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;gCACpBC,oBAAoB,YAAhB,aAAW;gCACfA,oBAAM;;EAEDD,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAiB;;EACpBA,KAAK,EAAC;AAAiB;;;;uBANjCE,oBAcM,OAdNC,UAcM,GAbJC,UAAoB,EACpBC,UAAM,EACNC,aAAgDC;IAAjCC,SAAQ,EAAEC;EAAU,wCACnCR,oBASI,OATJS,UASI,sBARJR,oBAMMS,6BANkDF,oBAAW,GAA9BG,OAAO,EAAEC,KAAK;yBAAnDX,oBAMM,OANNY,UAMM,GALJb,oBAA+E,QAA/Ec,UAA+E,oBAAjD,SAAO,uBAAmC,iCAAxBH,OAAO,CAACI,IAAI,oBAC5Df,oBAA4B,4BAAtBW,OAAO,CAACK,OAAO,kBACrBhB,oBAEM,cADNA,oBAA0E;MAAvEiB,IAAI,EAAC,GAAG;MAACC,KAAK,EAAC,SAAS;MAAMC,OAAK,2BAAUX,sBAAa,CAACI,KAAK","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_FormTodo","onAddTodo","$options","_hoisted_4","_Fragment","comment","index","_hoisted_5","_hoisted_6","name","message","href","title","onClick"],"sourceRoot":"","sources":["/home/dh/vuejs/comentarios/src/components/Comments.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>Comentários</h1>\n    <hr />\n    <FormTodo v-on:add-todo=\"addComment\"></FormTodo>\n    <div class=\"list-group\">\n    <div class=\"list-group-item\" v-for=\"(comment, index) in allComments\">\n      <span class=\"comment__author\">Autor: <strong>{{ comment.name }}</strong></span>\n      <p>{{ comment.message }}</p>\n      <div>\n      <a href=\"#\" title=\"Excluir\" v-on:click.prevent=\"removeComment(index)\"></a>\n      </div>\n    </div>\n      \n  </div>\n  </div>\n</template>\n\n<script>\n  import FormTodo from './FormTodo';\n  export default {\n    components: {\n      FormTodo\n    },\n    data() {\n      return {\n        comments: []\n      }\n    }, \n    methods: {\n      addComment(comment) {\n        this.comments.push(comment);\n      }\n    ,\n    removeComment(index) {\n      this.comments.splice(index, 1);\n    }\n  },\n  computed: {\n    allComments(){\n      return this.comments.map(comment => ({\n        ...comment, \n        name: comment.name.trim() === \"\" ? 'Anônimo': comment.name\n      }))\n    }\n  },\n  watch: {\n    comments(val) {\n      console.log('val', val)\n    }\n  }\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}