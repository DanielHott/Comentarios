{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-todo form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    placeholder: \"Nome\",\n    type: \"text\",\n    name: \"author\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]])]), _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"textarea\", {\n    placeholder: \"Comentario\",\n    name: \"message\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.message = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message]])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addComment && $options.addComment(...args)),\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Comentar\")]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAsB;;uBAAjCC,oBASM,OATNC,UASM,GARFC,oBAGI,4BAFAA,oBACiB;IADTC,WAAW,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,QAAQ;IAACN,KAAK,EAAC,cAAc;+DAChEO,UAAI;iDAAJA,UAAI,OAEjBJ,oBAEI,4BADJA,oBAAoG;IAA1FC,WAAW,EAAC,YAAY;IAACE,IAAI,EAAC,SAAS;IAACN,KAAK,EAAC,cAAc;+DAAUO,aAAO;iDAAPA,aAAO,OAEvFJ,oBAAuF;IAA1EK,OAAK,yCAAEC,mDAAU;IAAEJ,IAAI,EAAC,QAAQ;IAACL,KAAK,EAAC;KAAkB,UAAQ","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","placeholder","type","name","$data","onClick","$options"],"sourceRoot":"","sources":["/home/dh/vuejs/comentarios/src/components/FormTodo.vue"],"sourcesContent":["<template>\n    <div class=\"form-todo form-group\">\n        <p>\n            <input  placeholder=\"Nome\" type=\"text\" name=\"author\" class=\"form-control\"\n            v-model=\"name\" />\n        </p>\n        <p>\n        <textarea placeholder=\"Comentario\" name=\"message\" class=\"form-control\" v-model=\"message\"></textarea>\n        </p>\n        <button v-on:click=\"addComment\" type=\"submit\" class=\"btn btn-primary\">Comentar</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data(){\n        return {\n            name: '',\n            message: '',\n        }\n    },\n    methods: {\n        addComment() {\n            if(this.message.trim() === '') {\n                return;\n            }\n            const actualLocal = localStorage.getItem('comments');\n            const atual = actualLocal ? localStorage.setItem('comments',\n             [...actualLocal, {name: this.name, message: this.message}]) :\n              localStorage.setItem('comments', {name: this.name, message: this.message})\n            localStorage.setItem('comments')\n            this.$emit('add-todo', {\n                name: this.name,\n                message: this.message,\n            })\n\n            this.name = '';\n            this.message = '';\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}